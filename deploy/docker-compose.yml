version: '3.9'

services:
  api:
    build:
      context: ../
      dockerfile: deploy/Dockerfile
    image: server:${SERVER_VERSION:-latest}
    restart: always
    env_file:
      - ../.env
    depends_on:
      db:
        condition: service_healthy
    environment:
      SERVER_HOST: 0.0.0.0
      SERVER_DB_HOST: db
      SERVER_DB_PORT: 5432
      SERVER_DB_USER: postgres
      SERVER_DB_PASS: 1234
      SERVER_DB_BASE: arb_server
    ports:
      - "8000:8000"

  db:
    image: postgres:13.8-bullseye
    hostname: server-db
    environment:
      POSTGRES_PASSWORD: "1234"
      POSTGRES_USER: "postgres"
      POSTGRES_DB: "arb_server"
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: always
    healthcheck:
      test: pg_isready -U postgres
      interval: 2s
      timeout: 3s
      retries: 40

  migrator:
    image: server:${SERVER_VERSION:-latest}
    restart: "no"
    command: aerich upgrade
    environment:
      SERVER_DB_HOST: db
      SERVER_DB_PORT: 5432
      SERVER_DB_USER: postgres
      SERVER_DB_PASS: 1234
      SERVER_DB_BASE: arb_server
    depends_on:
      db:
        condition: service_healthy
#  pgadmin:
#    image: dpage/pgadmin4
#    container_name: pgadmin4_container
#    restart: always
#    ports:
#      - "5050:80"
#    environment:
#      PGADMIN_DEFAULT_EMAIL: raj@nola.com
#      PGADMIN_DEFAULT_PASSWORD: admin
#    volumes:
#      - pgadmin-data:/var/lib/pgadmin



volumes:
  db-data:
    name: db-data
  pgadmin-data:
